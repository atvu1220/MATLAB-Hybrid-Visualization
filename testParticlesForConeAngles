%Test Particle Simulation of Foreshock Ion at a Tangential Discontinuity
clear
close all

%% Simulation input
%Constant
b0 = 5e-9; %nT
q = 1.6e-19; %C
mion = 1.6605e-27;%kg
mu0 = 4*pi*10^-7;
n0 = 5e6; %m^-3
c = 2.9999*10^8; %km/s
epsilon0 = 8.85e-12;

%Simulation Parameters
dt = 0.05;
ddthickness = 2;
thermal = 12;
T = 5;%150;%155;
n=5;
MA=10;
coneAngle = 90;

omega_p = q*b0/mion;
lambda_i = c/sqrt(n0*q^2/(epsilon0*mion)); %meters
va = sqrt(b0^2 / (mu0*mion*n0)); %m/s

z0 = -6*ddthickness*lambda_i;

shearAvgVperpx = [];
shearAvgVperpy = [];
shearAvgBx = [];
shearAvgBy = [];
coneAngles = [0,7.5,15,22.5,30];
for coneAngle = coneAngles;
%% Particle Initialization
x0 = 0;%nx*lambda_i;

%Random Parameters
% pos1 = [grid_x(nx/2) + 2*lambda_i*(rand(1,n)-0.5);...
%     grid_y(ny/2)+ 2*lambda_i*(rand(1,n)-0.5);...
%     grid_z(nz/2)+ -0.5*ddthickness*lambda_i + ddthickness*1*lambda_i*(rand(1,n)-0.5)];

pos1 = [zeros(1,n);zeros(1,n); z0.*ones(1,n)] ;


vthx = thermal.*va*sqrt(-2*log(rand(1,n))).*cos(2*pi*rand(1,n));
vthy = thermal.*va*sqrt(-2*log(rand(1,n))).*cos(2*pi*rand(1,n));
vthz = thermal.*va*sqrt(-2*log(rand(1,n))).*cos(2*pi*rand(1,n));


%Set Parameters
pos1 = [...
    x0,0,z0;...
    x0,0,z0;...
    x0,0,z0;...
    x0,0,z0;...
    x0,0,z0;...
    ]';
vthx = thermal.*[...
    va,...
    -2*va,...
    -3*va,...
    2*va,...
    3*va,...
    ];
vthy = thermal.*[...
    va,... %Black
    -2*va,... %Green
    -3*va,...%Red
    2*va,...%Blue
    3*va,...%Cyan
    ];
vthz = thermal.*[...
    va,...
    -2*va,...
    -3*va,...
    2*va,...
    3*va,...
    ];



ExBpos0 = [];
for nPart=1:n
    [Bpos,Epos] = get_FieldfromPos(pos1(:,nPart),ddthickness,b0,va,lambda_i,coneAngle);
    ExBpos = cross(Epos,Bpos)./norm(Bpos).^2;
    vel1(:,nPart) = [-2*MA*va*Bpos(1)/(norm(Bpos)) + vthx(:,nPart) + ExBpos(1); -2*MA*va*Bpos(2)/(norm(Bpos)) + vthy(:,nPart) + ExBpos(2); vthz(:,nPart) + ExBpos(3) ];
%     vx = (-24*va*Bpos(1)/(norm(Bpos)) + ExBpos(1))./va;
%     vy = (-24*va*Bpos(2)/(norm(Bpos)) + ExBpos(2))./va;
    ExBpos0 = [ExBpos0,ExBpos];
end


% %Check B Profile
% testX = -8*ddthickness*lambda_i:lambda_i:8*ddthickness*lambda_i;
% testBx = [];
% testBy = [];
% poszB = z0.*(-100:0.25:100);
% posB = [zeros(1,length(poszB));zeros(1,length(poszB)); poszB];
% BFig = figure('color','w','position',[000 0 800 800]);
% sgtitle(sprintf('B Profile for magnetic shear = %3.f degrees', coneAngle),'fontsize',14)
% 
% for j=1:length(poszB)
% [Bpos,Epos] = get_FieldfromPos(posB(:,j),ddthickness,b0,va,lambda_i,coneAngle);
% scatter(poszB(1,j)./lambda_i,Bpos(1)./b0,'r'); hold on
% scatter(poszB(1,j)./lambda_i,Bpos(2)./b0,'b'); hold on
% xlim([-50 50])
% end

%% Loop

vminus = zeros(3,n);

partColor = rand(3,n);
partColor = [0 0 0; 0 1 0; 1 0 0; 0 0 1; 0 1 1]';
partColor = [0 0 0;1 0 1; 1 0 0; 0 1 1; 0 0 1 ]';
time = zeros(T/dt,1);
xpos= zeros(T/dt,n);
ypos = zeros(T/dt,n);
zpos = zeros(T/dt,n);
vpx = zeros(T/dt,n);
vpy = zeros(T/dt,n);
vx = zeros(T/dt,n);
vy = zeros(T/dt,n);
Bx = zeros(T/dt,n);
By = zeros(T/dt,n);
Bz = zeros(T/dt,n);
for i=1:1:T/dt %Per Time
    time(i) = i*dt/(4*pi);
    for j=1:n %Per Particle
        [Bpos,Epos] = get_FieldfromPos(pos1(:,j),ddthickness,b0,va,lambda_i,coneAngle);
        %Velocity Update
        vminus(:,j) = vel1(:,j) + q*Epos*dt/(mion*2);
        
        t = q*Bpos/mion * dt/2;
        vprime = vminus(:,j) + (cross(vminus(:,j),t));
        s = 2*t / (1+norm(t)^2);
        vplus(:,j) = vminus(:,j) + (cross(vprime,s));
        
        vel2 = vplus(:,j) + q*Epos/mion * dt/2;
        
        %Position Update
        pos2 = pos1(:,j) + vel2*dt;

        [vparax,vparay,vparaz,vperpx,vperpy,vperpz] = get_Bcomp(Bpos,vel2);
        
        xpos(i,j) = pos2(1)/lambda_i;
        ypos(i,j) = pos2(2)/lambda_i;
        zpos(i,j) = pos2(3)/lambda_i;
        vpx(i,j) = (vperpx-ExBpos0(1,j))./va;
        vpy(i,j) = (vperpy-ExBpos0(2,j))./va;
        vx(i,j) = (vel2(1)-ExBpos0(1,j))./va;
        vy(i,j) = (vel2(2)-ExBpos0(2,j))./va;
        Bx(i,j) = Bpos(1)./b0;
        By(i,j) = Bpos(2)./b0;
        Bz(i,j) = Bpos(3)./b0;
        
        shearAngle(i,j) = angle([1,0,0],[Bx(i,j),By(i,j),Bz(i,j)]);
        
        if zpos(i,j) >= 0
            vxCrossTD(i,j) = vx(i,j);
            vyCrossTD(i,j) = vy(i,j);
            vpxCrossTD(i,j) = vpx(i,j);
            vpyCrossTD(i,j) = vpy(i,j);
            BxCrossTD(i,j) = max(abs(Bpos(1)));%Bx(i,j);
            ByCrossTD(i,j) = max(abs(Bpos(2)));%By(i,j);
        else
            vxCrossTD(i,j) = NaN;
            vyCrossTD(i,j) = NaN;
            vpxCrossTD(i,j) = NaN;
            vpyCrossTD(i,j) = NaN;
            BxCrossTD(i,j) = NaN;
            ByCrossTD(i,j) = NaN;
        end
        
        %Push down Velocity
        vel1(:,j) = vel2;
        pos1(:,j) = pos2;
    end
end

avgvx = mean(vx,2);
avgvy = mean(vy,2);
avgvpx = mean(vpx,2);
avgvpy = mean(vpy,2);

avgvxCrossTD = median(vxCrossTD,2,'omitnan');
avgvyCrossTD = median(vyCrossTD,2,'omitnan');
avgvpxCrossTD = median(vpxCrossTD,2,'omitnan');
avgvpyCrossTD = median(vpyCrossTD,2,'omitnan');
% avgBxCrossTD = mean(BxCrossTD,2,'omitnan');
% avgByCrossTD = mean(ByCrossTD,2,'omitnan');
avgBxCrossTD = median(BxCrossTD,2,'omitnan');
avgByCrossTD = median(ByCrossTD,2,'omitnan');
%Find the average motion for particles that cross the center of the
%Discontinuity.
% avgFig = figure('color','w','position',[000 0 800 800]);
% figure(avgFig);
% sgtitle(sprintf('Average motion of only particles that cross z=0 for magnetic shear = %3.f degrees', magneticShear),'fontsize',14)
% subplot(2,2,1);hold on
% plot(time(2:end),avgvxCrossTD(2:end),'color','k');ylabel('avg Vx/va', 'fontsize',14); xlabel('\Omega_{pi}', 'fontsize',14) %z vs xcomp
% xlim([0 T./(2*2*pi)]); grid on
% 
% subplot(2,2,2); hold on
% plot(time(2:end),avgvyCrossTD(2:end),'color','k');  ylabel('avg Vy/va', 'fontsize',14);xlabel('\Omega_{pi}', 'fontsize',14)%y vs ycomp
% xlim([0 T./(2*2*pi)]); grid on
% 
% subplot(2,2,3);hold on
% plot(time(2:end),avgvpxCrossTD(2:end),'color','k');  ylabel('avg Vperpx/va', 'fontsize',14);xlabel('\Omega_{pi}', 'fontsize',14)%z vs perpxcomp
% xlim([0 T./(2*2*pi)]); grid on
% 
% subplot(2,2,4); hold on
% plot(time(2:end),avgvpyCrossTD(2:end),'color','k');ylabel('avg Vperpy/va', 'fontsize',14);xlabel('\Omega_{pi}', 'fontsize',14) %z vs perpycomp
% xlim([0 T./(2*2*pi)]); grid on


shearAvgVperpx = [shearAvgVperpx,median(avgvpxCrossTD,'omitnan')];
shearAvgVperpy = [shearAvgVperpy,median(avgvpyCrossTD,'omitnan')];
shearAvgBx = [shearAvgBx,median(avgBxCrossTD,'omitnan')];
shearAvgBy = [shearAvgBy,median(avgByCrossTD,'omitnan')];





timeFig = figure('color','w','position',[800 0 800 1600]);
zFig = figure('color','w','position',[1600 0 800 1600]);
for j=1:n
    %% Time
    figure(timeFig);
    subplot(4,2,[1:1]);hold on;
    plot(time(2:end),zpos(2:end,j),'o','color',partColor(:,j)','markersize',2,'markerfacecolor',partColor(:,j))
    xlim([0 T]./(2*2*pi));
    xlabel('\Omega_{pi}');zlabel('Z');
    title('Time vs. FS Ion Z Position'+string(coneAngle),'fontsize',14);
    grid on; 
    
    subplot(4,2,[2:2]);hold on;
    plot(time(2:end),zpos(2:end,j),'o','color',partColor(:,j)','markersize',2,'markerfacecolor',partColor(:,j))
    xlim([0 T./(2*2*pi)]);
    xlabel('\Omega_{pi}');ylabel('Z');
    title('Time vs. FS Ion Z Position'+string(coneAngle),'fontsize',14);
    grid on; 
    
    %B
    subplot(4,2,3);hold on
    plot(time(2:end),Bx(2:end,j),'color',partColor(:,j)'); ylabel('Bx', 'fontsize',14);xlabel('\Omega_{pi}', 'fontsize',14);%z vs xcomp
    xlim([0 T./(2*2*pi)]); grid on
    
    subplot(4,2,4);hold on
    plot(time(2:end),By(2:end,j),'color',partColor(:,j)'); ylabel('By', 'fontsize',14);xlabel('\Omega_{pi}', 'fontsize',14)%z vs xcomp
    xlim([0 T./(2*2*pi)]); grid on
    
    subplot(4,2,5);hold on
    plot(time(2:end),vx(2:end,j),'color',partColor(:,j)');ylabel('Vx/va', 'fontsize',14); xlabel('\Omega_{pi}', 'fontsize',14) %z vs xcomp
    xlim([0 T./(2*2*pi)]); grid on
    
    subplot(4,2,6); hold on
    plot(time(2:end),vy(2:end,j),'color',partColor(:,j)');  ylabel('Vy/va', 'fontsize',14);xlabel('\Omega_{pi}', 'fontsize',14)%y vs ycomp
    xlim([0 T./(2*2*pi)]); grid on
    
    subplot(4,2,7);hold on
    plot(time(2:end),vpx(2:end,j),'color',partColor(:,j)');  ylabel('Vperpx/va', 'fontsize',14);xlabel('\Omega_{pi}', 'fontsize',14)%z vs perpxcomp
    xlim([0 T./(2*2*pi)]); grid on
    
    subplot(4,2,8); hold on
    plot(time(2:end),vpy(2:end,j),'color',partColor(:,j)');ylabel('Vperpy/va', 'fontsize',14);xlabel('\Omega_{pi}', 'fontsize',14) %z vs perpycomp
    xlim([0 T./(2*2*pi)]); grid on
    
    %% Z
    figure(zFig);
    subplot(6,2,[1:4]);hold on
    plot3(xpos(2:end,j),ypos(2:end,j),zpos(2:end,j),'o','color',partColor(:,j)','markersize',8,'markerfacecolor',partColor(:,j))
    xlabel('X');  ylabel('Y');zlabel('Z');
    title('FS Ion Trajectory for'+string(coneAngle), 'fontsize',14)
    grid on; 

    view(0,0)
    %B
    subplot(6,2,5); hold on
    plot(zpos(2:end,j),Bx(2:end,j),'color',partColor(:,j)');  ylabel('Bx', 'fontsize',14);xlabel('Z', 'fontsize',14)%z vs xcomp
%     xline(z0./lambda_i)
xline(0)
yline(0)
xlim([-20 20])
    
    subplot(6,2,6); hold on
    plot(zpos(2:end,j),By(2:end,j),'color',partColor(:,j)'); ylabel('By', 'fontsize',14);xlabel('Z', 'fontsize',14)%z vs xcomp
%     xline(z0./lambda_i)
xline(0)
yline(0)
xlim([-20 20])
    
    subplot(6,2,7); hold on
    plot(zpos(2:end,j),vx(2:end,j),'color',partColor(:,j)'); ylabel('Vx/va', 'fontsize',14);xlabel('Z', 'fontsize',14)%z vs xcomp
%     xline(z0./lambda_i)
xline(0)
yline(0)
xlim([-20 20])
    
    subplot(6,2,8); hold on
    plot(zpos(2:end,j),vy(2:end,j),'color',partColor(:,j)');   ylabel('Vy/va', 'fontsize',14);xlabel('Z', 'fontsize',14)%y vs ycomp
%     xline(z0./lambda_i)
    xline(0)
    yline(0)
    xlim([-20 20])
    
    subplot(6,2,9); hold on
    plot(zpos(2:end,j),vpx(2:end,j),'color',partColor(:,j)'); ylabel('Vperpx/va', 'fontsize',14);xlabel('Z', 'fontsize',14) %z vs perpxcomp
%     xline(z0./lambda_i)
xline(0)
yline(0)
xlim([-20 20])
    
    subplot(6,2,10);hold on;
    plot(zpos(2:end,j),vpy(2:end,j),'color',partColor(:,j)'); ylabel('Vperpy/va', 'fontsize',14);xlabel('Z', 'fontsize',14) %z vs perpycomp
%     xline(z0./lambda_i);
    xline(0)
    yline(0)
    xlim([-20 20])
    
    subplot(6,2,11);hold on;
    plot(zpos(2:end,j),(vpx(2:end,j).^2 + vpy(2:end,j).^2 ).^(1/2),'color',partColor(:,j)'); ylabel('Vperp/va', 'fontsize',14);xlabel('Z', 'fontsize',14) %z vs perpycomp
    %     xline(z0./lambda_i);
        xline(0)
    yline(0)
    xlim([-20 20])
    
    subplot(6,2,12);hold on;
    plot(zpos(2:end,j),shearAngle(2:end,j),'color',partColor(:,j)'); ylabel('Shear Angle', 'fontsize',14);xlabel('Z', 'fontsize',14) %z vs perpycomp
    %     xline(z0./lambda_i);
        xline(0)
    yline(0)
    xlim([-20 20])
end
end
avgAllshearFig = figure('color','w','position',[000 0 800 800]);
sgtitle(sprintf('Avg Motion of Foreshock Ions that cross DD center for different Magnetic Shears'),'fontsize',20)
subplot(3,1,1);hold on
yyaxis left
scatter(coneAngles,shearAvgVperpx,300,'filled');
yyaxis right
scatter(coneAngles,shearAvgBx./b0,300,'filled');
ylabel('avg Bx/B0', 'fontsize',29);
yyaxis left
ylabel('avg V\perpx/va', 'fontsize',20); xlabel('Magnetic Shear Angle', 'fontsize',20) 
set(gca,'linewidth',6,'fontsize',20);
xticks([0 15 30 45 60 75 90 105 120 135 150 165 180])


subplot(3,1,2);hold on
yyaxis left
scatter(coneAngles,shearAvgVperpy,300,'filled');
yyaxis right
scatter(coneAngles,shearAvgBy./b0,300,'filled');
ylabel('avg By/B0', 'fontsize',20);
yyaxis left
ylabel('avg V\perpy/va', 'fontsize',20); xlabel('Magnetic Shear Angle', 'fontsize',20) 
set(gca,'linewidth',6,'fontsize',20);
xticks([0 15 30 45 60 75 90 105 120 135 150 165 180])

subplot(3,1,3);hold on
yyaxis left
scatter(coneAngles,(shearAvgVperpy.^2 + shearAvgVperpy.^2).^(1/2),300,'filled');
yyaxis right
scatter(coneAngles,(shearAvgBx.^2+shearAvgBy.^2).^(1/2)./b0,300,'filled');
ylabel('avg B/B0', 'fontsize',20);
yyaxis left
ylabel('avg V\perp/va', 'fontsize',20); xlabel('Magnetic Shear Angle', 'fontsize',20) 
set(gca,'linewidth',6,'fontsize',20);
xticks([0 15 30 45 60 75 90 105 120 135 150 165 180])

function[Bpos,Epos] =  get_FieldfromPos(pos,ddthickness,b0,va,lambda_i,magneticShear)
dx_frac=1;
% if pos(3) <= 0
%     Bpos(1) = 0.5*b0 - 0.5*b0*tanh( (pos(3) )     / ( lambda_i*ddthickness ) );
%     Bpos(2) = 0.5*b0 + 0.5*b0*tanh( (pos(3))     / ( lambda_i*ddthickness ) );
%     Bpos(3) = 0.0;
% end
% if pos(3) > 0
%     Bpos(1) = 0.5*b0 - 0.5*b0*tanh( (pos(3) )     / ( lambda_i*ddthickness ) );
%     Bpos(2) = 0.5*b0 + 0.5*b0*tanh( (pos(3) )     / ( lambda_i*ddthickness ) );
%     Bpos(3) = 0.0;
% end

if pos(3) <= 0
    Bpos(1) = 0.5*b0*(cos(magneticShear/180*pi) - cos((magneticShear+90)/180*pi)) +... 
              0.5*b0*(cos(magneticShear/180*pi) + cos((magneticShear+90)/180*pi))*tanh(-( pos(3) ) / ( lambda_i*dx_frac*ddthickness ) );
    Bpos(2) = 0.5*b0*(sin(magneticShear/180*pi) + sin((magneticShear+90)/180*pi)) +... 
              0.5*b0*(sin(magneticShear/180*pi) - sin((magneticShear+90)/180*pi))*tanh(-( pos(3) ) / ( lambda_i*dx_frac*ddthickness ) );
    Bpos(3) = 0.0;
end
if pos(3) > 0
    Bpos(1) = 0.5*b0*(-cos(magneticShear/180*pi) + cos((magneticShear+90)/180*pi)) +... 
              0.5*b0*( cos(magneticShear/180*pi) + cos((magneticShear+90)/180*pi))*tanh( (pos(3) )     / ( lambda_i*dx_frac*ddthickness ) );
    Bpos(2) = 0.5*b0*( sin(magneticShear/180*pi) + sin((magneticShear+90)/180*pi)) +... 
              0.5*b0*(-sin(magneticShear/180*pi) - sin((magneticShear+90)/180*pi))*tanh( (pos(3) )     / ( lambda_i*dx_frac*ddthickness ) );
    Bpos(3) = 0.0;
end

sw_vel = [12*va,0,0];
if (size(Bpos)) ~= (size(sw_vel))
    pause
end

Epos = - cross(sw_vel,Bpos);
Epos = Epos';
Bpos=Bpos';
end

function[vparax,vparay,vparaz,vperpx,vperpy,vperpz] = get_Bcomp(Bpos,vel)
vpara = Bpos(1).*vel(1) + Bpos(2).*vel(2) + Bpos(3).*vel(3);
vparax = vpara.*Bpos(1)./norm(Bpos).^2;
vparay = vpara.*Bpos(2)./norm(Bpos).^2;
vparaz = vpara.*Bpos(3)./norm(Bpos).^2;
vperpx = vel(1) - vparax;
vperpy = vel(2) - vparay;
vperpz = vel(3) - vparaz;
end
